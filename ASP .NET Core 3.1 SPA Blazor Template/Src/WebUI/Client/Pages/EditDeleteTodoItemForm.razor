@using Template.WebUI.Shared.TodoItems.Commands.UpdateTodoItemDetail
@using Template.WebUI.Shared.TodoLists.Queries.GetTodos
@using Template.Domain.Enums
@using Template.WebUI.Shared.Common

@inject HttpClient Http

<div class="modal-body">
    <div class="form">
        <div class="form-group">
            <label for="list">List</label>
            <select class="form-control" @bind="TodoItemDto.ListId">
                @for (int i = 0; i < TodosVm.Lists.Count; i++)
                {
                    if (i == 0)
                    {
                        <option selected="selected" value="@TodosVm.Lists[i].Id">@TodosVm.Lists[i].Title</option>
                    }
                    else
                    {
                        <option value="@TodosVm.Lists[i].Id">@TodosVm.Lists[i].Title</option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label for="priority">Priority</label>
            <select class="form-control" @bind="@TodoItemDto.Priority">
                @for (int i = 0; i < TodosVm.PriorityLevels.Count; i++)
                {
                    <option value="@TodosVm.PriorityLevels[i].Value">@TodosVm.PriorityLevels[i].Name</option>
                }
            </select>
        </div>
        <div class="form-group">
            <label for="note">Note</label>
            <textarea id="note" class="form-control" rows="3" @bind="TodoItemDto.Note"></textarea>
        </div>
    </div>
</div>
<div class="modal-footer">
    <div class="clearfix">
        <div class="float-left">
            <button class="btn btn-default text-danger" @onclick="DeleteTodoItem">Delete</button>
        </div>
        <div class="float-right">
            <button class="btn btn-default" @onclick="BlazoredModal.Cancel">Cancel</button>
            <button class="btn btn-primary" @onclick="UpdateTodoItemDetails">Update</button>
        </div>
    </div>
</div>

@code {
    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; }

    [Parameter]
    public TodoItemDto TodoItemDto { get; set; }

    [Parameter]
    public TodosVm TodosVm { get; set; }

    public async void UpdateTodoItemDetails()
    {
        await Http.PutAsJsonAsync($"api/TodoItems/UpdateItemDetails", new UpdateTodoItemDetailCommand { Id = TodoItemDto.Id, ListId = TodoItemDto.ListId, Priority = (PriorityLevel)TodoItemDto.Priority, Note = TodoItemDto.Note });

        await BlazoredModal.Close(ModalResult.Ok(GlobalConstants.SUCCESS));
    }

    public async void DeleteTodoItem()
    {
        await Http.DeleteAsync($"api/TodoItems/{TodoItemDto.Id}");

        await BlazoredModal.Close(ModalResult.Ok(GlobalConstants.SUCCESS));
    }
}
